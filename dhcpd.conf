default-lease-time 600;
max-lease-time     7200;

# If this DHCP server is the official DHCP server for the local
# network, the authoritative directive should be uncommented.
#authoritative;

# Use this to send dhcp log messages to a different log file (you also
# have to hack syslog.conf to complete the redirection).
log-facility local7;

option netbios-name-servers 10.0.0.2, 10.0.0.8;

# defines the type of data used to send the routing informations
option rfc3442-classless-static-routes code 121 = array of unsigned integer 8;
option ms-classless-static-routes code 249 = array of unsigned integer 8;

#1 = B-node, 2 = P-node, 4 =M-node, 8 = H-node
option netbios-node-type 8;

subnet 10.128.255.0 netmask 255.255.255.0 {
}

#=============================================
# Racks Room 1: Injection Pulsed Magnets 
#=============================================

#######  VLAN 170  #######
# port 06: 10.128.170.107 --> Booster Injection Septum
# port 07: 10.128.170.108 --> Booster Injection Kicker
# port 08: 10.128.170.109 --> SR Injection Septum Thick-1
# port 09: 10.128.170.110 --> SR Injection Septum Thick-2
# port 17: 10.128.170.111 --> SR Injection Septum Thin
# port 18: 10.128.170.112 --> Horizontal Pinger
# port 19: 10.128.170.113 --> OnAxis
# port 20: 10.128.170.116 --> NLK

#class "10.128.170.DHCP" {
#    match if ((binary-to-ascii(10, 8, ".", option agent.remote-id) = "10.128.170.11") and 
#            ((binary-to-ascii(10, 32, ".", option agent.circuit-id) = "17") or
#            (binary-to-ascii(10, 32, ".", option agent.circuit-id) = "18")));
#    spawn with option agent.circuit-id;
#}

class "10.128.170.107" {
    match if ((binary-to-ascii(10, 8, ".", option agent.remote-id) = "10.128.170.11") and 
            (binary-to-ascii(10, 32, ".", option agent.circuit-id) = "6"));
    spawn with option agent.circuit-id;
}
class "10.128.170.108" {
    match if ((binary-to-ascii(10, 8, ".", option agent.remote-id) = "10.128.170.11") and 
            (binary-to-ascii(10, 32, ".", option agent.circuit-id) = "7"));
    spawn with option agent.circuit-id;
}
class "10.128.170.109" {
    match if ((binary-to-ascii(10, 8, ".", option agent.remote-id) = "10.128.170.11") and 
            (binary-to-ascii(10, 32, ".", option agent.circuit-id) = "8"));
    spawn with option agent.circuit-id;
}
class "10.128.170.110" {
    match if ((binary-to-ascii(10, 8, ".", option agent.remote-id) = "10.128.170.11") and 
            (binary-to-ascii(10, 32, ".", option agent.circuit-id) = "9"));
    spawn with option agent.circuit-id;
}
class "10.128.170.111" {
    match if ((binary-to-ascii(10, 8, ".", option agent.remote-id) = "10.128.170.11") and 
            (binary-to-ascii(10, 32, ".", option agent.circuit-id) = "17"));
    spawn with option agent.circuit-id;
}
class "10.128.170.112" {
    match if ((binary-to-ascii(10, 8, ".", option agent.remote-id) = "10.128.170.11") and 
            (binary-to-ascii(10, 32, ".", option agent.circuit-id) = "18"));
    spawn with option agent.circuit-id;
}
class "10.128.170.113" {
    match if ((binary-to-ascii(10, 8, ".", option agent.remote-id) = "10.128.170.11") and 
            (binary-to-ascii(10, 32, ".", option agent.circuit-id) = "19"));
    spawn with option agent.circuit-id;
}
class "10.128.170.116" {
    match if ((binary-to-ascii(10, 8, ".", option agent.remote-id) = "10.128.170.11") and 
            (binary-to-ascii(10, 32, ".", option agent.circuit-id) = "20"));
    spawn with option agent.circuit-id;
}

#---------------------------------------------

# Defining subnet of VLAN 170
subnet 10.128.170.0 netmask 255.255.255.0 {
    option domain-name-servers 10.0.0.71, 10.0.0.72;
    option subnet-mask 255.255.255.0;
#    option routers 10.128.170.1;
    option routers 10.128.170.11;
    option broadcast-address 10.128.170.255;

    #===============
    # Dynamic IP
    #===============
#    pool {
#        allow members of "10.128.170.DHCP";
#        range 10.128.170.170 10.128.170.254;
#    }
    #===============
    # Static IP
    #===============
    #----------------------------------- 
    # Booster Injection Septum
    pool {
        allow members of "10.128.170.107";
        range 10.128.170.107;
    }
    #----------------------------------- 
    # Booster Injection Kicker
    pool {
        allow members of "10.128.170.108";
        range 10.128.170.108;
    }
    #----------------------------------- 
    # SR Injection Septum Thick-1
    pool {
        allow members of "10.128.170.109";
        range 10.128.170.109;
    }
    #----------------------------------- 
    # SR Injection Septum Thick-2
    pool {
        allow members of "10.128.170.110";
        range 10.128.170.110;
    }
    #----------------------------------- 
    # SR Injection Septum Thick-2
    pool {
        allow members of "10.128.170.111";
        range 10.128.170.111;
    }
    #----------------------------------- 
    # Horizontal Pinger
    pool {
        allow members of "10.128.170.112";
        range 10.128.170.112;
    }
    #----------------------------------- 
    # OnAxis
    pool {
        allow members of "10.128.170.113";
        range 10.128.170.113;
    }
    #----------------------------------- 
    # NLK
    pool {
        allow members of "10.128.170.116";
        range 10.128.170.116;
    }
    #----------------------------------- 
}

#=============================================
# Racks Room 20: Ejection Pulsed Magnets
#=============================================

#######  VLAN 180  #######
# port 13: 10.128.180.107 --> Booster Ejection Kicker
# port 14: 10.128.180.108 --> Booster Ejection Septum Thin
# port 15: 10.128.180.109 --> Booster Ejection Septum Thick
# port 16: 10.128.180.110 --> Vertical Pinger
# port 17: 10.128.180.111 --> Spare (room 20)

#class "10.128.180.DHCP" {
#    match if ((binary-to-ascii(10, 8, ".", option agent.remote-id) = "10.128.180.11") and 
#            ((binary-to-ascii(10, 32, ".", option agent.circuit-id) = "16") or
#            (binary-to-ascii(10, 32, ".", option agent.circuit-id) = "17") or
#            (binary-to-ascii(10, 32, ".", option agent.circuit-id) = "24")));
#    spawn with option agent.circuit-id;
#}

class "10.128.180.107" {
    match if ((binary-to-ascii(10, 8, ".", option agent.remote-id) = "10.128.180.11") and 
            (binary-to-ascii(10, 32, ".", option agent.circuit-id) = "13"));
    spawn with option agent.circuit-id;
}
class "10.128.180.108" {
    match if ((binary-to-ascii(10, 8, ".", option agent.remote-id) = "10.128.180.11") and 
            (binary-to-ascii(10, 32, ".", option agent.circuit-id) = "14"));
    spawn with option agent.circuit-id;
}
class "10.128.180.109" {
    match if ((binary-to-ascii(10, 8, ".", option agent.remote-id) = "10.128.180.11") and 
            (binary-to-ascii(10, 32, ".", option agent.circuit-id) = "15"));
    spawn with option agent.circuit-id;
}
class "10.128.180.110" {
    match if ((binary-to-ascii(10, 8, ".", option agent.remote-id) = "10.128.180.11") and 
            (binary-to-ascii(10, 32, ".", option agent.circuit-id) = "16"));
    spawn with option agent.circuit-id;
}
class "10.128.180.111" {
    match if ((binary-to-ascii(10, 8, ".", option agent.remote-id) = "10.128.180.11") and 
            (binary-to-ascii(10, 32, ".", option agent.circuit-id) = "17"));
    spawn with option agent.circuit-id;
}

#---------------------------------------------

# Defining subnet of VLAN 180
subnet 10.128.180.0 netmask 255.255.255.0 {
    option domain-name-servers 10.0.0.71, 10.0.0.72;
    option subnet-mask 255.255.255.0;
    #option routers 10.128.180.1;
    option routers 10.128.180.11;
    option broadcast-address 10.128.180.255;

    #=========================
    # Dynamic IP
    #=========================
#    pool {
#        allow members of "10.128.180.DHCP";
#        range 10.128.180.170 10.128.180.254;
#    }
    #=========================
    # Static IP
    #=========================
    #----------------------------------- 
    # Booster Ejection Kicker
    pool {
        allow members of "10.128.180.107";
        range 10.128.180.107;
    }
    #----------------------------------- 
    # Booster Ejection Septum Thin
    pool {
        allow members of "10.128.180.108";
        range 10.128.180.108;
    }
    #----------------------------------- 
    # Booster Ejection Septum Thick
    pool {
        allow members of "10.128.180.109";
        range 10.128.180.109;
    }
    #----------------------------------- 
    # Vertical Pinger
    pool {
        allow members of "10.128.180.110";
        range 10.128.180.110;
    }
    #----------------------------------- 
    # Spare (room 20)
    pool {
        allow members of "10.128.180.111";
        range 10.128.180.111;
    }
    #----------------------------------- 
}

#=============================================

option option-128 code 128 = string;
option option-129 code 129 = text;
